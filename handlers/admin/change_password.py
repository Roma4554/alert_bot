from re import search

from aiogram import types
from aiogram.dispatcher import FSMContext


from keyboards import inline_cancel_keyboard
from utility.decorators import check_permission
from classes import FsmAdmin
from utility.cleaner import config, message_id_dict, cleaner


password_pattern = r'^(?=.*\d)(?=.*[a-z])(?=.*[A-Z])(?!.*[\s#`~"\'\.\+\-\\\/\*$%‚Ññ@;:^&\*\=]).*$'


@check_permission
async def change_password(message: types.Message, state: FSMContext) -> None:
    """
    –•–µ–Ω–¥–ª–µ—Ä –ø–æ–∑–≤–æ–ª—è—é—â–∏–π –∏–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–æ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    """
    await message.answer('üîë <b>–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –ø–∞—Ä–æ–ª—å!</b>\
                         \n–ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Å—Ç—Ä–æ—á–Ω—ã–µ –∏ –ø—Ä–æ–ø–∏—Å–Ω—ã–µ –ª–∞—Ç–∏–Ω—Å–∫–∏–µ –±—É–∫–≤—ã, —Ü–∏—Ñ—Ä—ã',
                         reply_markup=inline_cancel_keyboard,
                         parse_mode=types.ParseMode.HTML)

    await state.set_state(FsmAdmin.change_password_state.state)


async def set_new_password(message: types.Message, state: FSMContext) -> None:
    """
    –•–µ–Ω–¥–µ–ª–µ—Ä —Å–æ—Ö—Ä–∞–Ω—è—é—â–∏–π –Ω–æ–≤—ã–π –ø–∞—Ä–æ–ª—å –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    """

    if search(password_pattern, message.text):
        config['topsecret']['admin_password'] = message.text
        config.write()
        await message.answer('‚úî –ü–∞—Ä–æ–ª—å —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω!',
                             parse_mode=types.ParseMode.HTML)
        message_id_dict[message.from_user.id].append(message.message_id)
        await state.finish()
        await cleaner(message)
    else:
        echo = await message.reply('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –ø–∞—Ä–æ–ª—å.\
                                    \n–ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Å—Ç—Ä–æ—á–Ω—ã–µ –∏ –ø—Ä–æ–ø–∏—Å–Ω—ã–µ –ª–∞—Ç–∏–Ω—Å–∫–∏–µ –±—É–∫–≤—ã, —Ü–∏—Ñ—Ä—ã!')
        message_id_dict[message.from_user.id].extend([message.message_id, echo.message_id])
